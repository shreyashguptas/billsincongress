apiVersion: batch/v1
kind: CronJob
metadata:
  name: bills-update-job
  namespace: bills-update
  labels:
    app: bills-update
spec:
  schedule: "0 1 * * *"  # 1 AM daily
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: bills-update
            image: shreyashguptas/bills-update:latest
            # Always pull the latest image to ensure we're running the most recent version
            # This is especially important when using the 'latest' tag
            imagePullPolicy: Always
            # Git configuration via environment variables from secret
            env:
            - name: GIT_USER_EMAIL
              valueFrom:
                secretKeyRef:
                  name: git-credentials
                  key: git-email
            - name: GIT_USER_NAME
              valueFrom:
                secretKeyRef:
                  name: git-credentials
                  key: git-name
            resources:
              requests:
                memory: "512Mi"
                cpu: "250m"
              limits:
                memory: "1Gi"
                cpu: "500m"
            volumeMounts:
            - name: logs-volume
              mountPath: /app/logs
            - name: env-file
              mountPath: /app/.env.local
              subPath: .env.local
            livenessProbe:
              exec:
                command:
                - pgrep
                - node
              initialDelaySeconds: 60
              periodSeconds: 300
          volumes:
          - name: logs-volume
            persistentVolumeClaim:
              claimName: bills-update-logs
          - name: env-file
            secret:
              secretName: bills-update-secrets
          # Let Kubernetes decide which node to run on for better scheduling flexibility
          restartPolicy: OnFailure
          # Add tolerations for node taints if any
          tolerations:
          - key: "node-role.kubernetes.io/worker"
            operator: "Exists"
            effect: "NoSchedule" 